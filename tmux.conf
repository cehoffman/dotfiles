# Rebind action key to `
unbind-key C-b
set-option -g prefix `
bind-key ` send-prefix

# allow switching between two prefixes
bind-key C-q set-option -g prefix C-g \; unbind-key ` \; bind-key C-g send-prefix
bind-key C-w set-option -g prefix ` \; unbind-key C-g \; bind-key ` send-prefix

# Confirm before killing
bind-key k confirm kill-window
bind-key K confirm kill-server

# Refresh the screen, sometimes just needed
bind-key R refresh-client

# Make the escape key not delay so vim is more responsive
set -sg escape-time 0

# Make tmux control the xterm window title based on title of current pane
set -g set-titles on
set-window-option -g xterm-keys on
set-window-option -g alternate-screen on

# Move windows around
unbind-key .
bind-key m command "swap-window -t '%%'"

# Easy movement
bind-key -n M-Left prev
bind-key -n M-Right next

# Have a good history
set-option -g history-limit 5000

# Start window indexing at 1
set-option -g base-index 1

# Pause so I can read the dang message
set-option -g display-time 2500

# Don't notify on window activity
set-window-option -g monitor-activity off
set-option -g visual-content off
set-option -g visual-bell off
set-option -g visual-activity off

# Style the tabs
set-option -g message-fg blue
set-option -g message-bg black
set-window-option -g mode-fg red
set-option -g status-left ''
set-option -g status-attr bright
set-option -g status-bg default
set-option -g status-fg black
set-option -g status-interval 1
set-option -g status-right '%b %d #[fg=cyan]%I:%M #[default]%p'
set-window-option -g window-status-format '#I#F#W'
set-window-option -g window-status-current-format ' #I#F #W '
set-window-option -g window-status-current-attr dim
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg colour77
set-window-option -g window-status-bell-bg default
set-window-option -g window-status-bell-fg colour45
set-window-option -g window-status-bell-attr dim

# The command mode box
set-option -g message-fg colour248
set-option -g message-bg colour236

# Let me know which pane is active
set-option -g pane-active-border-fg green
set-option -g pane-active-border-bg default
set-option -g pane-border-fg white
set-option -g pane-border-bg default

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
unbind-key '"'
bind-key s split-window -v
unbind-key %
bind-key v split-window -h

# move around panes with j and k, a bit like vim
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -t :.+
bind-key k select-pane -t :.-

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind-key < resize-pane -L 1
bind-key > resize-pane -R 1
bind-key - resize-pane -D 1
bind-key + resize-pane -U 1

# vi-style controls for copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi

# My default terminal has 180 columns so setup the max vertical window width
# to be half of that for ease of viewing and the max rows is 66 so half of that
set-window-option -g main-pane-width 90
set-window-option -g main-pane-height 33

# enable the mouse
# set-option -g mouse-select-pane on
# set-window-option -g mode-mouse on

set-option -g status-utf8 on
set-window-option -g utf8 on
# Reload config, just in case
bind-key r source-file ~/.tmux.conf

new-session -d -s main 'exec sudo htop'
set-window-option -t main:1 monitor-activity off

if-shell 'test -x $(which reattach-to-user-namespace)' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'
# Don't tell me when this always changing window changes!
if-shell 'test -x $(which reattach-to-user-namespace)' 'new-window -t main:2 "reattach-to-user-namespace -l $SHELL"'
if-shell 'test ! -x $(which reattach-to-user-namespace)' 'new-window -t main:2'
