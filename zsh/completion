# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# provide .. as a completion
zstyle ':completion:*' special-dirs ..

# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending

# use caching
zstyle ':completion:*' use-cache true
# zstyle ':completion::complete:*' cachepath .zcache

# Use a menu for completion
zstyle ':completion:*' menu select

# Describe options in full
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:options' description 'yes'

# Make the process selection a little nicer
zstyle ':completion:*:*:kill:*:processes' list-colors  '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
zstyle ':completion:*:*:*:*:processes' command "ps -au $USER -o pid,user,comm -w -w"

# Load known hosts file for auto-completion with ssh and scp commands
# function {
#   local -a _ssh_hosts
#   local -a _etc_hosts
#   local -a hosts
#   [ -r ~/.ssh/known_hosts ] && _ssh_hosts=(${${${${(f)"$(<$HOME/.ssh/known_hosts)"}:#[\|]*}%%\ *}%%,*}) || _ssh_hosts=()
#   [ -r /etc/hosts ] && : ${(A)_etc_hosts:=${(s: :)${(ps:\t:)${${(f)~~"$(</etc/hosts)"}%%\#*}##[:blank:]#[^[:blank:]]#}}} || _etc_hosts=()
#   hosts=("$_ssh_hosts[@]" "$_etc_hosts[@]" $(hostname) localhost)
#   zstyle ':completion:*:hosts' hosts $hosts
#   zstyle ':completion:*:*:(ssh|scp):*:*' hosts $hosts
# }

# Don't ever select the parent directory, e.g. cd ../<TAB> won't select your current dir
zstyle ':completion:*:cd:*' ignore-parents parent pwd

# With commands like rm, it's annoying if you keep getting offered the same
# file multiple times. This fixes it. Also good for cp, et cetera..
zstyle ':completion:*:(rm|cp):*' ignore-line yes

# Set rehash on failure to find executable
zstyle ':completion:*' rehash true

zstyle -e ':completion:*' completer _oldlist _expand _complete _match _ignored _approximate _list _history _files
# zstyle -e ':completion:*' completer '
# if [[ $_last_try != "$HISTNO$BUFFER$CURSOR" ]] ; then
#   _last_try="$HISTNO$BUFFER$CURSOR"
#   reply=(_complete _match _ignored _prefix _files)
# else
#   if [[ $words[1] == (rm|mv) ]] ; then
#     reply=(_complete _files)
#   else
#     reply=(_oldlist _expand _complete _match _ignored _approximate _files)
#   fi
# fi'

# Some completion settings
# zstyle ':completion:*:match:*' match-original only
zstyle ':completion:*' insert-unambiguous true

# Expand partial paths
# zstyle ':completion:*' squeeze-slashes true

# verbose completion
zstyle ':completion:*' verbose true
zstyle ':completion:*:descriptions' format '%F{green}Completions for %B%d%b%f'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
zstyle ':completion:*:approximate:*' original true
zstyle ':completion:*:approximate:*' prompt 'Approximate to: %e'

# Don't autoexpand until nothing else has changed on line
zstyle ':completion:*' keep-prefix true
zstyle ':completion:*' expand prefix suffix
# zstyle ':completion:*' suffix true

# Separate matches into groups because empty string tells system to use name
# of completion function used as name of group
zstyle ':completion:*' group-name ''

# Ignore completions functions for commands you don't have
zstyle ':completion::(^approximate*):*:functions' ignored-patterns '_*'

# Make approximate allow more errors as the length increases
zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'

# Suggested completion style from _git completion
zstyle ':completion::*:git-{name-rev,add,rm}:*' ignore-line true

# Add a recent director listing completion using the cdr command
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':completion:*:*:cdr:*:*' menu selection
zstyle ':chpwd:*' recent-dirs-default true
zstyle ':completion:*' recent-dirs-insert both
zstyle ':chpwd:*' recent-dirs-prune parent

zmodload -i zsh/complist

function {
  emulate -L zsh
  local hash
  for hash in md5 sha1 sha256 sha512; compdef _files $hash
}

[[ $IS_MAC = 0 ]] && compdef _man pman
compdef _ls l
compdef _git g

# vim: filetype=zsh
