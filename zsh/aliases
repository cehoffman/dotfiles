alias g='git'
alias gd='git d'
alias gdc='git dc'
alias ga='git add -p'

alias l='ls -lAh'
alias less='less -R'
alias x='extract -d'

# Create a tmux session if there isn't one to attach to
[[ -z "$TMUX" ]] && alias tmux="tmux new-session -A -t main"

# Show full history
alias history='fc -l 1'

function reload() {
  for file in ~/.dotfiles/zsh/functions/*(:t); do
    if command -v $(basename "$file") > /dev/null; then
      unfunction $(basename "$file")
    fi
  done
  autoload -U ~/.dotfiles/zsh/functions/*(:t)
}
reload

function mcd() { mkdir -p "$1" && cd "$1" }

function {
  emulate -L zsh
  local hash
  for hash in md5 sha1 sha256 sha512; do
    eval 'function '${hash}'() {
      emulate -L zsh
      if [[ -z $1 ]]; then
        echo '\''usage: '${hash}' <file>\n'\''
        return 1
      fi
      openssl dgst -'${hash}' "$1"
    }'
  done
}

function 256c() {
  echo -n "\e[38;5;${1}m${${(z)*}[2,-1]}"
}

if [[ $IS_MAC = 0 ]]; then
  # Aliases for setuid/setgid programs on Mac 10.8 to avoid DYLD_ complaints
  alias ps="env -u DYLD_INSERT_LIBRARIES ps"
  alias rcp="env -u DYLD_INSERT_LIBRARIES rcp"
  alias at="env -u DYLD_INSERT_LIBRARIES at"
  alias atq="env -u DYLD_INSERT_LIBRARIES atq"
  alias atrm="env -u DYLD_INSERT_LIBRARIES atrm"
  alias batch="env -u DYLD_INSERT_LIBRARIES batch"
  alias crontab="env -u DYLD_INSERT_LIBRARIES crontab"
  alias ipcs="env -u DYLD_INSERT_LIBRARIES ipcs"
  alias lockfile="env -u DYLD_INSERT_LIBRARIES lockfile"
  alias login="env -u DYLD_INSERT_LIBRARIES login"
  alias newgrp="env -u DYLD_INSERT_LIBRARIES newgrp"
  alias procmail="env -u DYLD_INSERT_LIBRARIES procmail"
  alias quota="env -u DYLD_INSERT_LIBRARIES quota"
  alias rlogin="env -u DYLD_INSERT_LIBRARIES rlogin"
  alias rsh="env -u DYLD_INSERT_LIBRARIES rsh"
  alias su="env -u DYLD_INSERT_LIBRARIES su"
  alias sudo="env -u DYLD_INSERT_LIBRARIES sudo"
  alias top="env -u DYLD_INSERT_LIBRARIES top"
  alias wall="env -u DYLD_INSERT_LIBRARIES wall"
  alias write="env -u DYLD_INSERT_LIBRARIES write"
  alias postdrop="env -u DYLD_INSERT_LIBRARIES postdrop"
  alias postqueue="env -u DYLD_INSERT_LIBRARIES postqueue"
  alias traceroute="env -u DYLD_INSERT_LIBRARIES traceroute"
  alias traceroute6="env -u DYLD_INSERT_LIBRARIES traceroute6"

  # show and hide files from Finder
  alias hide="SetFile -a V"
  alias show="SetFile -a v"
  alias ql="qlmanage -p 2>/dev/null"

  function vol() {
    if [[ -n $1 ]]; then
      osascript -e "set volume output volume $1"
    else
      osascript -e "output volume of (get volume settings)"
    fi
  }

  function pman() {
    man -t $* | open -f -a Preview
  }

  if [[ -r $HOME/Applications/MacVim.app ]]; then
    alias vim="$HOME/Applications/MacVim.app/Contents/MacOS/Vim"
    EDITOR=${=aliases[vim]}
    VISUAL=$EDITOR
  fi

  if [[ -f /Library/Application\ Support/VMware\ Fusion/vmrun ]]; then
    function fusion () {
      /Library/Application\ Support/VMware\ Fusion/vmrun -T fusion "$@" nogui
    }
  fi
fi

# Rsync options are:
#  -p - preserve permissions
#  -o - preserve owner
#  -g - preserve group
#  -h - output in human-readable format
#  -l - copy symlinks
#  --progress - display progress
#  -b - instead of just overwriting an existing file, save the original
#  --backup-dir=/tmp/rsync - move backup copies to "/tmp/rsync"
#  -e /dev/null - only work on local files
#  -- - everything after this is an argument, even if it looks like an option

alias cpv="rsync -rpoghlb --backup-dir=/tmp/rsync -e /dev/null --progress --"

# vim: filetype=zsh
