case $TERM in
  xterm*|rxvt*)
    function preexec () {
      emulate -L zsh
      local -a cmd; cmd=(${(z)1})

      case $cmd[1] in
        fg)
          if (( $#cmd == 1 )); then
            # No arguments, need to find the job
            cmd=(builtin jobs -l %+)
          else
            # Find the specified job
            cmd=(builtin jobs -l ${(Q)cmd[2]})
          fi
          ;;
        %*)
          # Same as else above
          cmd=(builtin jobs -l ${(Q)cmd[1]})
          ;;
        exec)
          # doing an exec so bring it off the list
          shift cmd;&
        *)
          print -Pn "\e]0;%n@%m:${cmd[1]:t} ${cmd[2,-1]}\a"
          return
          ;;
      esac

      local -A jt; jt=(${(kv)jobtexts})

      $cmd >>(read num rest
              cmd=(${(z)${(e):-\$jt$num}})
              print -Pn "\e]0;%n@%m:${cmd[1]:t} ${cmd[2,-1]}\a") 2>/dev/null
    }
    function precmd () {
      print -Pn "\e]0;%n@%m: %~\a"  # xterm
    }
    ;;

  # screen*)
  #   function preexec () {
  #     local -a exe;
  #     exe=(${(z)1})

  #     print -Pn "\e]0;[%~] $1\a"
  #     print -Pn  "\ek%n@%m $exe[1]:t\e\\"
  #   }
  #   function precmd () {
  #     print -Pn "\e]0;[%~] $SHELL:t\a"
  #     print -Pn "\ek%n@%m $SHELL:t\e\\"
  #   }
  #   ;;
esac

# vim: ft=zsh
