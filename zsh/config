# Some basic env setup used throughout config
[[ ${(L)OSTYPE} =~ ^darwin ]]; IS_MAC=$?
[[ ${(L)OSTYPE} =~ ^linux ]]; IS_LINUX=$?
[[ ${(L)OSTYPE} =~ ^cygwin ]]; IS_CYGWIN=$?

# Enable hooks
typeset -gUa preexec_functions
typeset -gUa precmd_functions
typeset -gUa chpwd_functions

if [[ -o interactive ]]; then
  ZLE_REMOVE_SUFFIX_CHARS=$' \n\t;' # Prevent zsh from eating spaces after completion when inserting | &

  # smart urls
  autoload -U url-quote-magic
  zle -N self-insert url-quote-magic

  # Colorize me
  autoload colors; colors;

  if [[ -d ~/.homebrew/share/zsh/$ZSH_VERSION/help ]]; then
    unalias run-help
    autoload -U run-help
    autoload run-help-git
    autoload run-help-svn
    HELPDIR=~/.homebrew/share/zsh/$ZSH_VERSION/help
  fi
fi

HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000
REPORTTIME=60               # print elapsed time when more than 60 seconds

setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS        # allow functions to have local options
setopt LOCAL_TRAPS          # allow functions to have local traps
setopt CORRECT
setopt NO_CORRECT_ALL       # Prevents asking 'correct git to .git' when at root
setopt COMPLETE_IN_WORD
# setopt NO_ALWAYS_TO_END     # Don't got to end of word on completion from middle
setopt NO_LIST_AMBIGUOUS    # Show completion list immediately when ambiguous
# setopt NO_REC_EXACT         # Always ask if multiple matches exist with word

# setopt AUTO_MENU
setopt LIST_ROWS_FIRST      # Order completion by row instead of column
setopt RC_EXPAND_PARAM      # Use arrays in in params to get multiple versions
setopt CLOBBER              # allow > to clobber and >> to append/create
setopt POSIX_BUILTINS       # allow `command` to use the builtin versions

setopt INTERACTIVE_COMMENTS # Allow comments when in an interactive shell
setopt NO_PRINT_EXIT_VALUE  # My zsh prompt tells me what the exit value was

setopt SHARE_HISTORY        # All my shells are like one hive mind, cool
setopt HIST_VERIFY          # Verity a history command before executing (sanity)
setopt HIST_IGNORE_ALL_DUPS # Don't record dupes in history
setopt HIST_REDUCE_BLANKS   # Remove blanks between arguments before saving
setopt HIST_IGNORE_SPACE    # Insert a space at start to prevent history of cmd
setopt HIST_NO_STORE        # Don't save the history command (fc -l) in history
setopt HIST_LEX_WORDS       # Parse history from file like it was on commandline

setopt CHECK_JOBS           # A little nag that jobs exist before quiting
setopt NO_HUP               # Used in combination with CHECK_JOBS
setopt AUTO_CONTINUE        # Disowned jobs begin to run again
setopt LONG_LIST_JOBS       # Obvious, longer list of jobs
setopt NO_NOTIFY            # For an easier to read terminal, wait till prompt
setopt NO_AUTO_RESUME       # Bad inference, I don't mean to resume jobs
setopt NO_POSIX_JOBS        # Sub shells have their own job lists
setopt NO_BG_NICE           # don't nice background tasks

setopt AUTO_CD              # Don't require using cd to cd
setopt AUTO_PUSHD           # every cd pushs onto the stack
setopt PUSHD_SILENT         # Silent cds since we pushd
setopt PUSHD_IGNORE_DUPS    # Ignore duplicate pushs
setopt PUSHD_TO_HOME        # Empty pushd is like cd

setopt NULL_GLOB            # No match return nil, used in $path
setopt EXTENDED_GLOB        # use regex style globing
setopt REMATCH_PCRE         # use perl regex matching for the =~ operator

setopt C_BASES              # Output non base 10 like C

setopt AUTO_PARAM_KEYS      # Neater prompt, deletes spaces after complete
setopt AUTO_PARAM_SLASH     # Params that are directories get a /
setopt NOAUTO_REMOVE_SLASH  # Keep a slash if I put it there

setopt MAGIC_EQUAL_SUBST    # option=arg can have arg path expanded
setopt PROMPT_SUBST         # Allow variable substitution in the prompt

setopt IGNORE_EOF           # Allow ^D to be bound, 10 consecuritve EOF will quit
setopt NOFLOW_CONTROL       # Allow biding of ^S/^Q

## pager
export LESS="-Ri"
export PAGER=less
export LC_ALL='en_US.UTF-8'
export LANG='en_US.UTF-8'
export LC_CTYPE='en_US.UTF-8'

export EDITOR='nvim'

# Remove duplicates in paths
typeset -gU path cdpath manpath fpath

path[1,0]=(~/.bin(@) /opt/{s,}bin(/) /usr/{,local/}{s,}bin(/) /Applications/VirtualBox.app/Contents/MacOS(/) /usr/texbin/(/))
fpath[1,0]=(~/.dotfiles/zsh/functions(/) ~/.dotfiles/zsh/vendor/completions/src(/))
manpath[1,0]=(/usr/local/share/man(/) /usr/share/man(/) /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/share/man(/))

# Load all of your custom configurations from envs/
function {
  local config_file
  for config_file (~/.dotfiles/zsh/envs/*(on)) source $config_file
}

if [[ $IS_MAC = 0 ]]; then
  fignore+='.DS_Store'
  export __CF_USER_TEXT_ENCODING="$(printf '0x%X' $(id -u)):0x08000100:0"
  # Set a higher open file limit because we can stand it and it isn't
  # unreasonable to hit this with high concurrency file operations like
  # multiple git repository pulls
  ulimit -S -n 40000
fi

export MANPATH

if [[ -o interactive ]]; then
  alias grep="grep --color=auto"
  export GREP_COLOR='1;32'

  if [[ ! $TERM =~ ^screen ]]; then
    alias screen="screen -dRaA"
  else
    export TERM="screen-256color"
  fi

  ZSH_AUTOSUGGEST_STRATEGY=(completion history)
  ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=50
  ZSH_AUTOSUGGEST_HISTORY_IGNORE="?(#c50,)" # Don't suggest anything longer than 50 characters from history
  ZSH_AUTOSUGGEST_MANUAL_REBIND=1
  source ~/.dotfiles/zsh/vendor/autosuggestions/zsh-autosuggestions.zsh
  unset ZSH_AUTOSUGGEST_USE_ASYNC
  bindkey -M viins '^ ' autosuggest-fetch
  bindkey -M viins '^[[[CE' autosuggest-execute
  bindkey '^Xa' autosuggest-toggle # because it breaks in multiline command editing

  # Make a nice colored interactive prompt
  source ~/.dotfiles/zsh/vendor/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  ZSH_HIGHLIGHT_STYLES[path]=none
  ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets) # cursor pattern

  # Add nice shortcuts like ci" to standard vi mode
  if [[ ! -f ~/.dotfiles/zsh/functions/opp-install ]]; then
    zsh -c 'for O in ~/.dotfiles/zsh/vendor/opp.zsh/{opp.zsh,opp/*.zsh}; do . $O; done && opp-zcompile ~/.dotfiles/zsh/vendor/opp.zsh ~/.dotfiles/zsh/functions'
  fi
  autoload opp
  {source ~/.dotfiles/zsh/functions/opp-install; opp-install}

  if (( $+commands[direnv] )); then
    eval "$(direnv hook zsh)"
  fi
  source ~/.dotfiles/zsh/vendor/zaw/zaw.zsh
  source ~/.dotfiles/zsh/vendor/zsh-nix-shell/nix-shell.plugin.zsh

  # Make accessing zaw easier
  bindkey -M viins '^T' zaw
  bindkey -M vicmd '^T' zaw

  # Remove default zaw binding
  bindkey -r '^X;'

  # Make doing alternate accept possible, fuck Meta-Enter
  bindkey -M filterselect '^E' accept-search

  # zstyle ':filter-select:highlight' matched fg=green,underline
  zstyle ':filter-select' case-insensitive yes
  zstyle ':filter-select' extended-search yes
  zstyle ':filter-select' max-lines 4

  # Fake brew command so autojump doesn't slow shell startup calling it
  source ~/.dotfiles/zsh/vendor/fasd/fasd
  eval "$(fasd --init auto)"
  alias v="f -t -e vim -b viminfo"

  # Color all stderr lines yellow only when interactive The guard prevent
  # a proliferation of processes when using exec to replace the current shell
  # with a fresh instance
  export STDERRED_ESC_CODE="$fg[red]"
  if [[ -f ~/.homebrew/lib/libstderred.dylib ]]; then
    typeset -TgU DYLD_INSERT_LIBRARIES dyld_insert_libraries
    dyld_insert_libraries[1,0]=(~/.homebrew/lib/libstderred.dylib(-.))
    export DYLD_INSERT_LIBRARIES
  elif [[ -f ~/.homebrew/lib/libstderred.so ]]; then
    typeset -TgU LD_PRELOAD ld_preload
    ld_preload[1,0]=($HOME/.homebrew/lib/libstderred.so(-.))
    export LD_PRELOAD
  else
    if [[ "$STDERR_COLORIZE" != $$ ]]; then
      if (( $+commands[colorize] )); then
        exec 2>>(colorize $fg[yellow] $reset_color > /dev/tty &)
      else
        exec 2>>(while read line; do
          print ${fg[yellow]}$line$reset_color > /dev/tty; print -n $'\0'; done &)
      fi
      export STDERR_COLORIZE=$$
    fi
  fi

  if [[ -n "${VIM}" ]]; then
    unset DYLD_INSERT_LIBRARIES
    unset LD_PRELOAD
  fi

  # This needs to be done after all changes to fpath are made so _* commands
  # are setup correctly
  autoload -U compinit
  compinit -i

  autoload -U bashcompinit
  bashcompinit
else
  alias grep="grep --color=never"

  # Remove the stderr coloring libs from the env variables to prevent
  # complaints on setuid/setgid programs
  if (( $#dyld_insert_libraries )); then
    dyld_insert_libraries=("${(@)dyld_insert_libraries:#$HOME/.homebrew/lib/libstderred.dylib}")
  elif (( $#ld_preload )); then
    ld_preload=("${(@)ld_preload:#$HOME/.homebrew/lib/libstderred.so}")
  fi
fi

# vim: set ft=zsh:
