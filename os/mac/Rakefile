require 'erb'

class Context
  def self.new
    super.__get_binding
  end

  def __get_binding
    binding
  end
end

desc "Install mac specific items"
task :install do
  puts "installing iTerm2HotKey"
  system 'clang', '-Os', '-fobjc-arc', '-framework', 'Carbon', '-framework',
    'AppKit', 'iTerm2HotKey.m', '-o', File.expand_path('~/.bin/iTerm2HotKey')

  puts "installing GPGFix"
  system 'clang', '-Os', '-fobjc-arc', '-framework', 'IOKit', '-framework',
    'AppKit', 'GPGFix.m', '-o', File.expand_path('~/.bin/GPGFix')

  loaded = Hash[%x[launchctl list].strip.lines.map do |line|
    line = line.split
    [line.last, true]
  end]

  launch_agents_path = File.expand_path('~/Library/LaunchAgents')
  Dir.mkdir launch_agents_path unless Dir.exists? launch_agents_path

  Dir['im.ceh.*.plist*'].each do |plist|
    if plist =~ /\.erb$/
      contents = ERB.new(File.read(plist)).result(Context.new)
      plist = File.basename(plist).sub(/\.erb$/, '')
    else
      contents = File.open(plist, 'rb') { |f| f.read }
    end
    dest = File.expand_path("~/Library/LaunchAgents/#{plist}")

    puts "installing #{plist} to ~/Library/LaunchAgents"
    open(dest , 'w') { |file| file << contents }

    if loaded[File.basename(dest, '.plist')] || /im\.ceh\.gpg-smartcard/ =~ dest
      puts "shutting down #{plist}"
      system 'launchctl', 'unload', '-w', dest
    end

    puts "loading #{plist}"
    system 'launchctl', 'load', '-w', dest
  end
end
